{"ast":null,"code":"var _class;\nimport { HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ShopService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:44370/api/';\n    //pageSize='40';\n    this.sort = 'asc';\n    this.search = 'a';\n  }\n  GetProduct(shopParams) {\n    let params = new HttpParams();\n    if (shopParams.typeId !== 0) {\n      params = params.append('typeId', shopParams.typeId.toString());\n    }\n    if (shopParams.brandId !== 0) {\n      params = params.append('brandId', shopParams.brandId.toString());\n    }\n    params = params.append('sort', shopParams.sort);\n    params = params.append('pageIndex', shopParams.pageNumber);\n    params = params.append('pageSize', shopParams.pageSize);\n    ;\n    //params= params.append('sort', this.sort );\n    params = params.append('search', this.search);\n    //?PageSize=40&sort=asc&search=a\n    return this.http.get(this.baseUrl + 'Product', {\n      observe: 'response',\n      params: params // Use the 'params' variable\n    }).pipe(map(response => {\n      return response.body;\n    }));\n  }\n  GetBrands() {\n    return this.http.get(this.baseUrl + 'product/brands');\n  }\n  GetTypes() {\n    return this.http.get(this.baseUrl + 'product/types');\n  }\n}\n_class = ShopService;\n_class.ɵfac = function ShopService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpParams","map","ShopService","constructor","http","baseUrl","sort","search","GetProduct","shopParams","params","typeId","append","toString","brandId","pageNumber","pageSize","get","observe","pipe","response","body","GetBrands","GetTypes","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\project\\E-CommerceWebsite\\Client\\src\\app\\shop\\shop.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IPagination } from '../shared/Models/Pagination';\nimport { IBrands } from '../shared/Models/ProductBrands';\nimport { ITypes } from '../shared/Models/ProductType';\nimport { map } from 'rxjs';\nimport { ShopParams } from '../shared/Models/ShopParams';\n \n \n \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopService {\n  baseUrl='https://localhost:44370/api/';\n  //pageSize='40';\n  sort='asc';\n  search='a';\n  constructor( private http:HttpClient) { }\n\n  GetProduct(shopParams:ShopParams ){\n  let params =new HttpParams();\n  if(shopParams.typeId!==0){\n    params=params.append('typeId',shopParams.typeId.toString());\n  }\n   if(shopParams.brandId!==0){\n   params= params.append('brandId', shopParams.brandId.toString());\n   }  \n\n   params = params.append('sort', shopParams.sort);\n   params = params.append('pageIndex', shopParams.pageNumber);\n   params = params.append('pageSize', shopParams.pageSize);;\n   \n   \n   //params= params.append('sort', this.sort );\n   params= params.append('search', this.search);\n\n\n  \n  //?PageSize=40&sort=asc&search=a\n  return this.http.get<IPagination>(this.baseUrl + 'Product', {\n    observe: 'response', // Use 'response' to get the full response object\n    params: params,      // Use the 'params' variable\n  }).pipe(\n    map(response => {\n      return response.body;\n    })\n  );\n  }\n\n  GetBrands() {\n    return this.http.get<IBrands[]>(this.baseUrl + 'product/brands');\n  }\n\n  GetTypes(){\n    return this.http.get<ITypes[]>(this.baseUrl+'product/types')\n  }\n}\n"],"mappings":";AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAK7D,SAASC,GAAG,QAAQ,MAAM;;;AAS1B,OAAM,MAAOC,WAAW;EAKtBC,YAAqBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJzB,KAAAC,OAAO,GAAC,8BAA8B;IACtC;IACA,KAAAC,IAAI,GAAC,KAAK;IACV,KAAAC,MAAM,GAAC,GAAG;EAC8B;EAExCC,UAAUA,CAACC,UAAqB;IAChC,IAAIC,MAAM,GAAE,IAAIV,UAAU,EAAE;IAC5B,IAAGS,UAAU,CAACE,MAAM,KAAG,CAAC,EAAC;MACvBD,MAAM,GAACA,MAAM,CAACE,MAAM,CAAC,QAAQ,EAACH,UAAU,CAACE,MAAM,CAACE,QAAQ,EAAE,CAAC;;IAE5D,IAAGJ,UAAU,CAACK,OAAO,KAAG,CAAC,EAAC;MAC1BJ,MAAM,GAAEA,MAAM,CAACE,MAAM,CAAC,SAAS,EAAEH,UAAU,CAACK,OAAO,CAACD,QAAQ,EAAE,CAAC;;IAG/DH,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,MAAM,EAAEH,UAAU,CAACH,IAAI,CAAC;IAC/CI,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,WAAW,EAAEH,UAAU,CAACM,UAAU,CAAC;IAC1DL,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,UAAU,CAACO,QAAQ,CAAC;IAAC;IAGxD;IACAN,MAAM,GAAEA,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACL,MAAM,CAAC;IAI7C;IACA,OAAO,IAAI,CAACH,IAAI,CAACa,GAAG,CAAc,IAAI,CAACZ,OAAO,GAAG,SAAS,EAAE;MAC1Da,OAAO,EAAE,UAAU;MACnBR,MAAM,EAAEA,MAAM,CAAO;KACtB,CAAC,CAACS,IAAI,CACLlB,GAAG,CAACmB,QAAQ,IAAG;MACb,OAAOA,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,CACH;EACD;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAAClB,IAAI,CAACa,GAAG,CAAY,IAAI,CAACZ,OAAO,GAAG,gBAAgB,CAAC;EAClE;EAEAkB,QAAQA,CAAA;IACN,OAAO,IAAI,CAACnB,IAAI,CAACa,GAAG,CAAW,IAAI,CAACZ,OAAO,GAAC,eAAe,CAAC;EAC9D;;SA3CWH,WAAW;;mBAAXA,MAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXzB,MAAW;EAAA0B,OAAA,EAAX1B,MAAW,CAAA2B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}